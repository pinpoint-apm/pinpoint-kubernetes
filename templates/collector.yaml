{{- if .Values.collector.enabled }}
# Collector Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pinpoint.fullname" . }}-collector
  labels:
    {{- include "pinpoint.labels" . | nindent 4 }}
    app.kubernetes.io/component: collector
spec:
  replicas: {{ .Values.collector.replicaCount }}
  selector:
    matchLabels:
      {{- include "pinpoint.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: collector
  template:
    metadata:
      labels:
        {{- include "pinpoint.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: collector
    spec:
      initContainers:
        # Wait for HBase - always required
        {{- if .Values.hbase.enabled }}
        - name: wait-for-hbase
          image: busybox:1.36
          command:
            - 'sh'
            - '-c'
            - |
              HBASE_POD_DNS="{{ include "pinpoint.fullname" . }}-hbase-0.{{ include "pinpoint.fullname" . }}-hbase.{{ .Release.Namespace }}.svc.cluster.local"

              # Wait for HBase to be ready
              until nc -z -w5 $HBASE_POD_DNS 16010; do
                echo "Collector is waiting for HBase..."
                sleep 5
              done

              echo "HBase is ready!"
        {{- end }}

        {{- if .Values.global.metric.enabled }}
        # Wait for Kafka only when metric profile is enabled.
        - name: wait-for-kafka
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z -w3 {{ .Release.Name }}-kafka 9092; do echo "Collector is waiting for Kafka..."; sleep 2; done;']

        # Wait for Pinot Controller only when metric profile is enabled.
        - name: wait-for-pinot-controller
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z -w3 {{ .Release.Name }}-pinot-controller 9000; do echo "Collector is waiting for Pinot Controller..."; sleep 2; done;']
        {{- end }}

      containers:
        - name: collector
          # Dynamically set the image tag based on the metric profile
          {{- $imageTag := .Values.collector.image.tag | default .Values.global.pinpointVersion }}
          {{- if .Values.global.metric.enabled }}
            {{- $imageTag = printf "%s-metric" ($imageTag | default .Values.global.pinpointVersion) }}
          {{- end }}
          image: "{{ .Values.collector.image.repository }}:{{ $imageTag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: grpc-agent
              containerPort: 9991
            - name: grpc-stat
              containerPort: 9992
            - name: grpc-span
              containerPort: 9993
            - name: thrift-rcv
              containerPort: 9994
            - name: udp-stat
              containerPort: 9995
              protocol: UDP
            - name: udp-span
              containerPort: 9996
              protocol: UDP
            {{- if .Values.global.metric.enabled }}
            - name: metric-port
              containerPort: 15200
            {{- end }}
          env:
            # Dynamically set the Spring profile
            - name: SPRING_PROFILES_ACTIVE
              {{- if .Values.global.metric.enabled }}
              value: "{{ .Values.collector.config.springProfiles }},metric"
              {{- else }}
              value: {{ .Values.collector.config.springProfiles | quote }}
              {{- end }}
            - name: CLUSTER_ENABLE
              value: {{ .Values.collector.config.cluster.enable | quote }}
            - name: LOGGING_LEVEL_ROOT
              value: {{ .Values.collector.config.loggingLevel }}
            - name: PINPOINT_ZOOKEEPER_ADDRESS
              value: "{{ .Release.Name }}-zookeeper"
            # HBase Connection Settings
            {{- if .Values.hbase.enabled }}
            - name: HBASE_HOST
              value: "{{ .Release.Name }}-hbase"
            - name: HBASE_PORT
              value: "60000"
            - name: HBASE_ZOOKEEPER_QUORUM
              value: "{{ .Release.Name }}-zookeeper"
            {{- end }}
            # Add Kafka and Pinot configurations only when metric profile is active
            {{- if .Values.global.metric.enabled }}
            - name: PINPOINT_METRIC_KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Release.Name }}-kafka:9092"
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Release.Name }}-kafka:9092"
            - name: SPRING_PINOTDATASOURCE_PINOT_JDBCURL
              value: "jdbc:pinot://{{ .Release.Name }}-pinot-controller:9000"
            - name: PINPOINT_PINOT_JDBC_URL
              value: "jdbc:pinot://{{ .Release.Name }}-pinot-controller:9000"
            # Remove empty username and password as Pinot driver doesn't accept empty strings
            {{- end }}
            # Disable OTLP metrics in both metric enabled and disabled modes
            - name: MANAGEMENT_OTLP_METRICS_EXPORT_ENABLED
              value: "false"
            - name: MANAGEMENT_METRICS_EXPORT_OTLP_ENABLED
              value: "false"
            # Redis Connection Settings
            {{- if .Values.redis.enabled }}
            - name: SPRING_DATA_REDIS_HOST
              value: "{{ .Release.Name }}-redis-master"
            - name: SPRING_DATA_REDIS_PORT
              value: "6379"
            - name: SPRING_DATA_REDIS_USERNAME
              value: ""
            {{- if .Values.redis.auth.enabled }}
            - name: SPRING_DATA_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-redis"
                  key: redis-password
            {{- else }}
            - name: SPRING_DATA_REDIS_PASSWORD
              value: ""
            {{- end }}
            {{- end }}

            # Additional Collector Configuration (matching Docker Compose)
            {{- if not .Values.global.metric.enabled }}
            - name: FLINK_CLUSTER_ENABLE
              value: "true"
            - name: FLINK_CLUSTER_ZOOKEEPER_ADDRESS
              value: "{{ .Release.Name }}-zookeeper"
            {{- end }}
          resources:
            {{- toYaml .Values.collector.resources | nindent 12 }}
---
# Collector Application Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "pinpoint.fullname" . }}-collector
  labels:
    {{- include "pinpoint.labels" . | nindent 4 }}
    app.kubernetes.io/component: collector
spec:
  type: {{ .Values.collector.service.type }}
  ports:
    - name: grpc-agent
      port: {{ .Values.collector.service.ports.grpcAgent }}
      targetPort: grpc-agent
      protocol: TCP
    - name: grpc-stat
      port: {{ .Values.collector.service.ports.grpcStat }}
      targetPort: grpc-stat
      protocol: TCP
    - name: grpc-span
      port: {{ .Values.collector.service.ports.grpcSpan }}
      targetPort: grpc-span
      protocol: TCP
    - name: thrift-receiver
      port: 9994
      targetPort: thrift-rcv
      protocol: TCP
    - name: udp-stat
      port: 9995
      targetPort: udp-stat
      protocol: UDP
    - name: udp-span
      port: 9996
      targetPort: udp-span
      protocol: UDP
    {{- if .Values.global.metric.enabled }}
    - name: metric-port
      port: 15200
      targetPort: metric-port
      protocol: TCP
    {{- end }}
  selector:
    {{- include "pinpoint.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: collector
{{- end }}