{{- if .Values.quickstart.enabled }}
# Quickstart Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pinpoint.fullname" . }}-quickstart
  labels:
    {{- include "pinpoint.labels" . | nindent 4 }}
    app.kubernetes.io/component: quickstart
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "pinpoint.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: quickstart
  template:
    metadata:
      labels:
        {{- include "pinpoint.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: quickstart
    spec:
      initContainers:
        - name: pinpoint-agent-init
          image: "{{ .Values.quickstart.agentImage.repository }}:{{ .Values.quickstart.agentImage.tag | default .Values.global.pinpointVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command: ['sh', '-c', 'cp -r /pinpoint-agent/. /agent']
          volumeMounts:
            - name: agent-volume
              mountPath: /agent
        - name: wait-for-collector
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z -w3 {{ include "pinpoint.fullname" . }}-collector {{ .Values.collector.service.ports.grpcAgent }}; do echo "Quickstart is waiting for pinpoint-collector..."; sleep 2; done;']
      containers:
        - name: quickstart
          image: "{{ .Values.quickstart.image.repository }}:{{ .Values.quickstart.image.tag | default .Values.global.pinpointVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            # Inject all parameters directly into the JVM using system properties (-D flags).
            # This is the most reliable method and bypasses config file issues.
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -javaagent:/agent/pinpoint-bootstrap.jar
                -Dpinpoint.agentId={{ .Values.quickstart.agentId }}
                -Dpinpoint.applicationName={{ .Values.quickstart.applicationName }}
                -Dprofiler.transport.grpc.collector.ip={{ include "pinpoint.fullname" . }}-collector
                -Dprofiler.transport.grpc.agent.port={{ .Values.collector.service.ports.grpcAgent }}
                -Dprofiler.transport.grpc.stat.port={{ .Values.collector.service.ports.grpcStat }}
                -Dprofiler.transport.grpc.span.port={{ .Values.collector.service.ports.grpcSpan }}
          volumeMounts:
            - name: agent-volume
              mountPath: /agent
          resources:
            {{- toYaml .Values.quickstart.resources | nindent 12 }}
      volumes:
        - name: agent-volume
          emptyDir: {}
---
# Quickstart Application Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "pinpoint.fullname" . }}-quickstart
  labels:
    {{- include "pinpoint.labels" . | nindent 4 }}
    app.kubernetes.io/component: quickstart
spec:
  type: {{ .Values.quickstart.service.type }}
  ports:
    - port: {{ .Values.quickstart.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "pinpoint.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: quickstart
{{- end }}